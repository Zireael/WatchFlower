name: "_old_ Desktop builds"

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  ## Windows build ##################################################################
  build-windows:
    name: "Windows MSVC"
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          modules: 'qtconnectivity qtpositioning qtcharts qtshadertools'
          setup-python: 'false'

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Configure project
        run: |
          cmake -B build -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_C_COMPILER=cl `
            -DCMAKE_CXX_COMPILER=cl `
            -DCMAKE_PREFIX_PATH="${{ env.Qt6_Dir }}"

      - name: Build project
        run: cmake --build build --config Release --parallel

      - name: Deploy Qt application
        run: |
          mkdir deploy
          copy build\WatchFlower.exe deploy\
          & "${{ env.Qt6_Dir }}\bin\windeployqt.exe" --qmldir . --no-translations --no-system-d3d-compiler --no-opengl-sw --no-compiler-runtime deploy\WatchFlower.exe

      - name: Deploy MSVC runtime
        run: |
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $installDir = & $vswhere -latest -property installationPath
          $redistDir = "$installDir\VC\Redist\MSVC"
          $redistVersion = Get-ChildItem $redistDir | Sort-Object Name -Descending | Select-Object -First 1
          $redistPath = "$redistDir\$redistVersion\x64\Microsoft.VC143.CRT"
          if (Test-Path $redistPath) {
            copy "$redistPath\msvcp140.dll" deploy\
            copy "$redistPath\vcruntime140.dll" deploy\
            copy "$redistPath\vcruntime140_1.dll" deploy\
          }

      - name: Create installer (NSIS)
        run: |
          # Run the deployment script if it exists
          if (Test-Path ".\deploy_windows.sh") {
            bash .\deploy_windows.sh
          }

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: WatchFlower-Windows-x64
          path: deploy/

  ## macOS build ####################################################################
  build-macos:
    name: "macOS"
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.0'
          host: 'mac'
          target: 'desktop'
          modules: 'qtconnectivity qtpositioning qtcharts qtshadertools'

      - name: Configure project
        run: |
          cmake -B build -G "Unix Makefiles" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="${{ env.Qt6_Dir }}"

      - name: Build project
        run: cmake --build build --config Release --parallel

      - name: Deploy Qt application
        run: |
          mkdir deploy
          cp build/WatchFlower.app/Contents/MacOS/WatchFlower deploy/
          ${{ env.Qt6_Dir }}/bin/macdeployqt build/WatchFlower.app -qmldir=.
          mv build/WatchFlower.app deploy/

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: WatchFlower-macOS
          path: deploy/

  ## Linux build ####################################################################
  build-linux:
    name: "Linux"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            libgl1-mesa-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libwayland-dev \
            libxrandr-dev \
            libxss-dev \
            libglib2.0-dev \
            libgtk-3-dev

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.0'
          host: 'linux'
          target: 'desktop'
          modules: 'qtconnectivity qtpositioning qtcharts qtshadertools'

      - name: Configure project
        run: |
          cmake -B build -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="${{ env.Qt6_Dir }}"

      - name: Build project
        run: cmake --build build --config Release --parallel

      - name: Deploy Qt application
        run: |
          mkdir deploy
          cp build/WatchFlower deploy/
          # Create AppImage or similar if needed

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: WatchFlower-Linux-x64
          path: deploy/
