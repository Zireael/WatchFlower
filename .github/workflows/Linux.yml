#-------------------------------------------------------------------------------
# Workflow configuration
#-------------------------------------------------------------------------------

name: "Linux CI Build"
on:
  push:
  pull_request:
  workflow_dispatch:

#-------------------------------------------------------------------------------
# Define application name & version
#-------------------------------------------------------------------------------

env:
  APP_NAME: "WatchFlower"
  APP_VERSION: "6.0"
  QT_VERSION: "6.7.3"

#-------------------------------------------------------------------------------
# Workflow jobs
#-------------------------------------------------------------------------------

jobs:
  ## GNU/Linux build ###########################################################
  build-linux:
    name: "Linux CI build"
    runs-on: ubuntu-25.4
    steps:
      # Checkout repository (and submodules)
      - name: Checkout repository (and submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install dependencies (from package manager)
      - name: Install dependencies (from package manager)
        run: |
             sudo apt-get install libgl1-mesa-dev libxkbcommon-x11-dev libx11-xcb-dev libzstd-dev -y;
             sudo apt-get install cmake ninja-build pkgconf libtool -y;
             sudo apt-get install appstream -y;
      # Install Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{env.QT_VERSION}}
          modules: qtconnectivity qtcharts qtpositioning

      # Build application
      - name: Build application
        run: |
             cmake --version
             cmake -B build/ -DCMAKE_BUILD_TYPE=Release -G Ninja
             cmake --build build/ --config Release
      # Deploy application
      - name: Deploy application
        run: ./deploy_linux.sh -c -i -p

      # Upload application ZIP
      - name: Upload application ZIP
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.APP_NAME}}-${{env.APP_VERSION}}-linux64.tar.gz
          path: ${{env.APP_NAME}}-${{env.APP_VERSION}}-linux64.tar.gz

      # Upload AppImage
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.APP_NAME}}-${{env.APP_VERSION}}-linux64.AppImage
          path: ${{env.APP_NAME}}-${{env.APP_VERSION}}-linux64.AppImage
